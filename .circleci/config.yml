version: 2.1
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.1

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout
      - setup_remote_docker

      # This is a bit redundant since we also install it in Docker below.
      - run:
          name: install dependencies
          command: pip install -r requirements.txt --user

      # This enables Snyk scanning of Python dependencies
      #- snyk/scan

      - run:
          name: Build docker image
          command: docker build -t "demo:$CIRCLE_SHA1" .

      - run:
          name: Build docker image with scanner
          command: docker build --build-arg token="$AQUA_TOKEN" --build-arg DEMO_IMAGE="demo:$CIRCLE_SHA1" -f Dockerfile.aqua .

      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      #- run:
      #    name: run tests
      #    command: |
      #      . venv/bin/activate
      #      python manage.py test

      - store_artifacts:
          path: test-reports
          destination: test-reports

orbs:
  # This is the helper module for Snyk
  snyk: snyk/snyk@0.0.8
